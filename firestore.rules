rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Settings rules with logging
    match /settings/{document=**} {
      allow read: if request.auth != null;  // Any authenticated user can read
      allow write: if request.auth != null &&  // Must be authenticated
        ('userType' in get(/databases/$(database)/documents/users/$(request.auth.uid)).data) &&  // Must have userType
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin';  // Must be admin
    }

    // Remove the catch-all deny rule temporarily
    // match /{document=**} {
    //   allow read, write: if false;
    // }

    // Basic functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin';
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Move notifications to the top and make it the most permissive for now
    match /notifications/{document=**} {
      allow read, write: if true;
    }

    // User rules
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (request.auth.uid == userId || 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == 'admin');
    }

    // Activities rules
    match /activities/{activityId} {
      allow read, write: if isAuthenticated();
    }

    // Payments rules
    match /payments/{paymentId} {
      allow read: if isAuthenticated() && (
        isOwner(resource.data.userId) || isAdmin()
      );
      allow write: if isAdmin();
    }

    // Classes rules
    match /classes/{classId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Allow read access to all authenticated users for basic collections
    match /{collection}/{document} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
  }
}